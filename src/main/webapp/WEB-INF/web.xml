<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
    <display-name>Reimbursement Management</display-name>
    <filter>
        <filter-name>CorsFilter</filter-name>
        <filter-class>org.apache.catalina.filters.CorsFilter</filter-class>
        <init-param>
            <param-name>cors.allowed.origins</param-name>
            <param-value>http://localhost:3000</param-value>
        </init-param>
        <init-param>
            <param-name>cors.support.credentials</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>cors.allowed.methods</param-name>
            <param-value>GET,HEAD,POST,PUT,DELETE,OPTIONS</param-value>
        </init-param>
        <!-- List of the response headers other than simple response headers that the browser should expose to
          the author of the cross-domain request through the XMLHttpRequest.getResponseHeader() method.
          The CORS filter supplies this information through the Access-Control-Expose-Headers header. -->
        <init-param>
            <param-name>cors.exposed.headers</param-name>
            <param-value>Access-Control-Allow-Origin,Access-Control-Allow-Credentials,x-auth-token</param-value>
        </init-param>
        <!-- The names of the supported author request headers. These are advertised through the Access-Control-Allow-Headers header.
          The CORS Filter implements this by simply echoing the requested value back to the browser.
        -->
        <init-param>
            <param-name>cors.allowed.headers</param-name>
            <param-value>Content-Type,X-Requested-With,accept,Origin,Access-Control-Request-Method,Access-Control-Request-Headers,x-auth-token</param-value>
        </init-param>
    </filter>
    ...
    <filter-mapping>
        <filter-name>CorsFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <!-- users -->
    <servlet>
        <servlet-name>users</servlet-name>
        <servlet-class>servlets.UserServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>register</servlet-name>
        <servlet-class>servlets.UserServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>login</servlet-name>
        <servlet-class>servlets.UserServlet</servlet-class>
    </servlet>

    <!-- Managers -->
    <servlet>
        <servlet-name>managersViewTicketsOrTicket</servlet-name>
        <servlet-class>servlets.ManagerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>managerRegister</servlet-name>
        <servlet-class>servlets.ManagerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>managerLogin</servlet-name>
        <servlet-class>servlets.ManagerServlet</servlet-class>
    </servlet>
    <servlet>
        <servlet-name>managerUpdateTicket</servlet-name>
        <servlet-class>servlets.ManagerServlet</servlet-class>
    </servlet>
    <!-- tickets -->
    <servlet>
        <servlet-name>tickets</servlet-name>
        <servlet-class>servlets.TicketServlet</servlet-class>
    </servlet>

    <!-- Mappings -->

    <!-- Users mapping -->
    <servlet-mapping>
        <servlet-name>users</servlet-name>
        <url-pattern>/users</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>register</servlet-name>
        <url-pattern>/users/register</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>login</servlet-name>
        <url-pattern>/users/login</url-pattern>
    </servlet-mapping>

    <!-- Managers Mapping -->
    <servlet-mapping>
        <servlet-name>managersViewTicketsOrTicket</servlet-name>
        <url-pattern>/managers</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>managerRegister</servlet-name>
        <url-pattern>/managers/register</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>managerLogin</servlet-name>
        <url-pattern>/managers/login</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>managerUpdateTicket</servlet-name>
        <url-pattern>/managers/update-ticket</url-pattern>
    </servlet-mapping>
    <!-- Tickets Mapping -->
    <servlet-mapping>
        <servlet-name>tickets</servlet-name>
        <url-pattern>/tickets</url-pattern>
    </servlet-mapping>

</web-app>
